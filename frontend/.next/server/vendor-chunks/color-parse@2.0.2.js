"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/color-parse@2.0.2";
exports.ids = ["vendor-chunks/color-parse@2.0.2"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/color-parse@2.0.2/node_modules/color-parse/index.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/color-parse@2.0.2/node_modules/color-parse/index.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var color_name__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! color-name */ \"(ssr)/./node_modules/.pnpm/color-name@2.0.0/node_modules/color-name/index.js\");\n/**\n * @module color-parse\n */\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (parse);\n\n/**\n * Base hues\n * http://dev.w3.org/csswg/css-color/#typedef-named-hue\n */\n//FIXME: use external hue detector\nvar baseHues = {\n\tred: 0,\n\torange: 60,\n\tyellow: 120,\n\tgreen: 180,\n\tblue: 240,\n\tpurple: 300\n}\n\n/**\n * Parse color from the string passed\n *\n * @return {Object} A space indicator `space`, an array `values` and `alpha`\n */\nfunction parse(cstr) {\n\tvar m, parts = [], alpha = 1, space\n\n\t//numeric case\n\tif (typeof cstr === 'number') {\n\t\treturn { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\t}\n\tif (typeof cstr === 'number') return { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\n\tcstr = String(cstr).toLowerCase();\n\n\t//keyword\n\tif (color_name__WEBPACK_IMPORTED_MODULE_0__[\"default\"][cstr]) {\n\t\tparts = color_name__WEBPACK_IMPORTED_MODULE_0__[\"default\"][cstr].slice()\n\t\tspace = 'rgb'\n\t}\n\n\t//reserved words\n\telse if (cstr === 'transparent') {\n\t\talpha = 0\n\t\tspace = 'rgb'\n\t\tparts = [0, 0, 0]\n\t}\n\n\t//hex\n\telse if (cstr[0] === '#') {\n\t\tvar base = cstr.slice(1)\n\t\tvar size = base.length\n\t\tvar isShort = size <= 4\n\t\talpha = 1\n\n\t\tif (isShort) {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[0], 16),\n\t\t\t\tparseInt(base[1] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[2], 16)\n\t\t\t]\n\t\t\tif (size === 4) {\n\t\t\t\talpha = parseInt(base[3] + base[3], 16) / 255\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[3], 16),\n\t\t\t\tparseInt(base[4] + base[5], 16)\n\t\t\t]\n\t\t\tif (size === 8) {\n\t\t\t\talpha = parseInt(base[6] + base[7], 16) / 255\n\t\t\t}\n\t\t}\n\n\t\tif (!parts[0]) parts[0] = 0\n\t\tif (!parts[1]) parts[1] = 0\n\t\tif (!parts[2]) parts[2] = 0\n\n\t\tspace = 'rgb'\n\t}\n\n\t// color space\n\telse if (m = /^((?:rgba?|hs[lvb]a?|hwba?|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms|oklch|oklab|color))\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\n\t\tvar name = m[1]\n\t\tspace = name.replace(/a$/, '')\n\t\tvar dims = space === 'cmyk' ? 4 : space === 'gray' ? 1 : 3\n\t\tparts = m[2].trim().split(/\\s*[,\\/]\\s*|\\s+/)\n\n\t\t// color(srgb-linear x x x) -> srgb-linear(x x x)\n\t\tif (space === 'color') space = parts.shift()\n\n\t\tparts = parts.map(function (x, i) {\n\t\t\t//<percentage>\n\t\t\tif (x[x.length - 1] === '%') {\n\t\t\t\tx = parseFloat(x) / 100\n\t\t\t\t// alpha -> 0..1\n\t\t\t\tif (i === 3) return x\n\t\t\t\t// rgb -> 0..255\n\t\t\t\tif (space === 'rgb') return x * 255\n\t\t\t\t// hsl, hwb H -> 0..100\n\t\t\t\tif (space[0] === 'h') return x * 100\n\t\t\t\t// lch, lab L -> 0..100\n\t\t\t\tif (space[0] === 'l' && !i) return x * 100\n\t\t\t\t// lab A B -> -125..125\n\t\t\t\tif (space === 'lab') return x * 125\n\t\t\t\t// lch C -> 0..150, H -> 0..360\n\t\t\t\tif (space === 'lch') return i < 2 ? x * 150 : x * 360\n\t\t\t\t// oklch/oklab L -> 0..1\n\t\t\t\tif (space[0] === 'o' && !i) return x\n\t\t\t\t// oklab A B -> -0.4..0.4\n\t\t\t\tif (space === 'oklab') return x * 0.4\n\t\t\t\t// oklch C -> 0..0.4, H -> 0..360\n\t\t\t\tif (space === 'oklch') return i < 2 ? x * 0.4 : x * 360\n\t\t\t\t// color(xxx) -> 0..1\n\t\t\t\treturn x\n\t\t\t}\n\n\t\t\t//hue\n\t\t\tif (space[i] === 'h' || (i === 2 && space[space.length - 1] === 'h')) {\n\t\t\t\t//<base-hue>\n\t\t\t\tif (baseHues[x] !== undefined) return baseHues[x]\n\t\t\t\t//<deg>\n\t\t\t\tif (x.endsWith('deg')) return parseFloat(x)\n\t\t\t\t//<turn>\n\t\t\t\tif (x.endsWith('turn')) return parseFloat(x) * 360\n\t\t\t\tif (x.endsWith('grad')) return parseFloat(x) * 360 / 400\n\t\t\t\tif (x.endsWith('rad')) return parseFloat(x) * 180 / Math.PI\n\t\t\t}\n\t\t\tif (x === 'none') return 0\n\t\t\treturn parseFloat(x)\n\t\t});\n\n\t\talpha = parts.length > dims ? parts.pop() : 1\n\t}\n\n\t//named channels case\n\telse if (/[0-9](?:\\s|\\/|,)/.test(cstr)) {\n\t\tparts = cstr.match(/([0-9]+)/g).map(function (value) {\n\t\t\treturn parseFloat(value)\n\t\t})\n\n\t\tspace = cstr.match(/([a-z])/ig)?.join('')?.toLowerCase() || 'rgb'\n\t}\n\n\treturn {\n\t\tspace,\n\t\tvalues: parts,\n\t\talpha\n\t}\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vY29sb3ItcGFyc2VAMi4wLjIvbm9kZV9tb2R1bGVzL2NvbG9yLXBhcnNlL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQzhCOztBQUU5QixpRUFBZSxLQUFLOztBQUVwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLFFBQVE7QUFDcEI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQSx3Q0FBd0M7O0FBRXhDOztBQUVBO0FBQ0EsS0FBSyxrREFBSztBQUNWLFVBQVUsa0RBQUs7QUFDZjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9ob21lL2FkZXNzL2JwcGQvZnJvbnRlbmQvbm9kZV9tb2R1bGVzLy5wbnBtL2NvbG9yLXBhcnNlQDIuMC4yL25vZGVfbW9kdWxlcy9jb2xvci1wYXJzZS9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBtb2R1bGUgY29sb3ItcGFyc2VcbiAqL1xuaW1wb3J0IG5hbWVzIGZyb20gJ2NvbG9yLW5hbWUnXG5cbmV4cG9ydCBkZWZhdWx0IHBhcnNlXG5cbi8qKlxuICogQmFzZSBodWVzXG4gKiBodHRwOi8vZGV2LnczLm9yZy9jc3N3Zy9jc3MtY29sb3IvI3R5cGVkZWYtbmFtZWQtaHVlXG4gKi9cbi8vRklYTUU6IHVzZSBleHRlcm5hbCBodWUgZGV0ZWN0b3JcbnZhciBiYXNlSHVlcyA9IHtcblx0cmVkOiAwLFxuXHRvcmFuZ2U6IDYwLFxuXHR5ZWxsb3c6IDEyMCxcblx0Z3JlZW46IDE4MCxcblx0Ymx1ZTogMjQwLFxuXHRwdXJwbGU6IDMwMFxufVxuXG4vKipcbiAqIFBhcnNlIGNvbG9yIGZyb20gdGhlIHN0cmluZyBwYXNzZWRcbiAqXG4gKiBAcmV0dXJuIHtPYmplY3R9IEEgc3BhY2UgaW5kaWNhdG9yIGBzcGFjZWAsIGFuIGFycmF5IGB2YWx1ZXNgIGFuZCBgYWxwaGFgXG4gKi9cbmZ1bmN0aW9uIHBhcnNlKGNzdHIpIHtcblx0dmFyIG0sIHBhcnRzID0gW10sIGFscGhhID0gMSwgc3BhY2VcblxuXHQvL251bWVyaWMgY2FzZVxuXHRpZiAodHlwZW9mIGNzdHIgPT09ICdudW1iZXInKSB7XG5cdFx0cmV0dXJuIHsgc3BhY2U6ICdyZ2InLCB2YWx1ZXM6IFtjc3RyID4+PiAxNiwgKGNzdHIgJiAweDAwZmYwMCkgPj4+IDgsIGNzdHIgJiAweDAwMDBmZl0sIGFscGhhOiAxIH1cblx0fVxuXHRpZiAodHlwZW9mIGNzdHIgPT09ICdudW1iZXInKSByZXR1cm4geyBzcGFjZTogJ3JnYicsIHZhbHVlczogW2NzdHIgPj4+IDE2LCAoY3N0ciAmIDB4MDBmZjAwKSA+Pj4gOCwgY3N0ciAmIDB4MDAwMGZmXSwgYWxwaGE6IDEgfVxuXG5cdGNzdHIgPSBTdHJpbmcoY3N0cikudG9Mb3dlckNhc2UoKTtcblxuXHQvL2tleXdvcmRcblx0aWYgKG5hbWVzW2NzdHJdKSB7XG5cdFx0cGFydHMgPSBuYW1lc1tjc3RyXS5zbGljZSgpXG5cdFx0c3BhY2UgPSAncmdiJ1xuXHR9XG5cblx0Ly9yZXNlcnZlZCB3b3Jkc1xuXHRlbHNlIGlmIChjc3RyID09PSAndHJhbnNwYXJlbnQnKSB7XG5cdFx0YWxwaGEgPSAwXG5cdFx0c3BhY2UgPSAncmdiJ1xuXHRcdHBhcnRzID0gWzAsIDAsIDBdXG5cdH1cblxuXHQvL2hleFxuXHRlbHNlIGlmIChjc3RyWzBdID09PSAnIycpIHtcblx0XHR2YXIgYmFzZSA9IGNzdHIuc2xpY2UoMSlcblx0XHR2YXIgc2l6ZSA9IGJhc2UubGVuZ3RoXG5cdFx0dmFyIGlzU2hvcnQgPSBzaXplIDw9IDRcblx0XHRhbHBoYSA9IDFcblxuXHRcdGlmIChpc1Nob3J0KSB7XG5cdFx0XHRwYXJ0cyA9IFtcblx0XHRcdFx0cGFyc2VJbnQoYmFzZVswXSArIGJhc2VbMF0sIDE2KSxcblx0XHRcdFx0cGFyc2VJbnQoYmFzZVsxXSArIGJhc2VbMV0sIDE2KSxcblx0XHRcdFx0cGFyc2VJbnQoYmFzZVsyXSArIGJhc2VbMl0sIDE2KVxuXHRcdFx0XVxuXHRcdFx0aWYgKHNpemUgPT09IDQpIHtcblx0XHRcdFx0YWxwaGEgPSBwYXJzZUludChiYXNlWzNdICsgYmFzZVszXSwgMTYpIC8gMjU1XG5cdFx0XHR9XG5cdFx0fVxuXHRcdGVsc2Uge1xuXHRcdFx0cGFydHMgPSBbXG5cdFx0XHRcdHBhcnNlSW50KGJhc2VbMF0gKyBiYXNlWzFdLCAxNiksXG5cdFx0XHRcdHBhcnNlSW50KGJhc2VbMl0gKyBiYXNlWzNdLCAxNiksXG5cdFx0XHRcdHBhcnNlSW50KGJhc2VbNF0gKyBiYXNlWzVdLCAxNilcblx0XHRcdF1cblx0XHRcdGlmIChzaXplID09PSA4KSB7XG5cdFx0XHRcdGFscGhhID0gcGFyc2VJbnQoYmFzZVs2XSArIGJhc2VbN10sIDE2KSAvIDI1NVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGlmICghcGFydHNbMF0pIHBhcnRzWzBdID0gMFxuXHRcdGlmICghcGFydHNbMV0pIHBhcnRzWzFdID0gMFxuXHRcdGlmICghcGFydHNbMl0pIHBhcnRzWzJdID0gMFxuXG5cdFx0c3BhY2UgPSAncmdiJ1xuXHR9XG5cblx0Ly8gY29sb3Igc3BhY2Vcblx0ZWxzZSBpZiAobSA9IC9eKCg/OnJnYmE/fGhzW2x2Yl1hP3xod2JhP3xjbXlrP3x4eVt6eV18Z3JheXxsYWJ8bGNodT92P3xbbHlddXZ8bG1zfG9rbGNofG9rbGFifGNvbG9yKSlcXHMqXFwoKFteXFwpXSopXFwpLy5leGVjKGNzdHIpKSB7XG5cdFx0dmFyIG5hbWUgPSBtWzFdXG5cdFx0c3BhY2UgPSBuYW1lLnJlcGxhY2UoL2EkLywgJycpXG5cdFx0dmFyIGRpbXMgPSBzcGFjZSA9PT0gJ2NteWsnID8gNCA6IHNwYWNlID09PSAnZ3JheScgPyAxIDogM1xuXHRcdHBhcnRzID0gbVsyXS50cmltKCkuc3BsaXQoL1xccypbLFxcL11cXHMqfFxccysvKVxuXG5cdFx0Ly8gY29sb3Ioc3JnYi1saW5lYXIgeCB4IHgpIC0+IHNyZ2ItbGluZWFyKHggeCB4KVxuXHRcdGlmIChzcGFjZSA9PT0gJ2NvbG9yJykgc3BhY2UgPSBwYXJ0cy5zaGlmdCgpXG5cblx0XHRwYXJ0cyA9IHBhcnRzLm1hcChmdW5jdGlvbiAoeCwgaSkge1xuXHRcdFx0Ly88cGVyY2VudGFnZT5cblx0XHRcdGlmICh4W3gubGVuZ3RoIC0gMV0gPT09ICclJykge1xuXHRcdFx0XHR4ID0gcGFyc2VGbG9hdCh4KSAvIDEwMFxuXHRcdFx0XHQvLyBhbHBoYSAtPiAwLi4xXG5cdFx0XHRcdGlmIChpID09PSAzKSByZXR1cm4geFxuXHRcdFx0XHQvLyByZ2IgLT4gMC4uMjU1XG5cdFx0XHRcdGlmIChzcGFjZSA9PT0gJ3JnYicpIHJldHVybiB4ICogMjU1XG5cdFx0XHRcdC8vIGhzbCwgaHdiIEggLT4gMC4uMTAwXG5cdFx0XHRcdGlmIChzcGFjZVswXSA9PT0gJ2gnKSByZXR1cm4geCAqIDEwMFxuXHRcdFx0XHQvLyBsY2gsIGxhYiBMIC0+IDAuLjEwMFxuXHRcdFx0XHRpZiAoc3BhY2VbMF0gPT09ICdsJyAmJiAhaSkgcmV0dXJuIHggKiAxMDBcblx0XHRcdFx0Ly8gbGFiIEEgQiAtPiAtMTI1Li4xMjVcblx0XHRcdFx0aWYgKHNwYWNlID09PSAnbGFiJykgcmV0dXJuIHggKiAxMjVcblx0XHRcdFx0Ly8gbGNoIEMgLT4gMC4uMTUwLCBIIC0+IDAuLjM2MFxuXHRcdFx0XHRpZiAoc3BhY2UgPT09ICdsY2gnKSByZXR1cm4gaSA8IDIgPyB4ICogMTUwIDogeCAqIDM2MFxuXHRcdFx0XHQvLyBva2xjaC9va2xhYiBMIC0+IDAuLjFcblx0XHRcdFx0aWYgKHNwYWNlWzBdID09PSAnbycgJiYgIWkpIHJldHVybiB4XG5cdFx0XHRcdC8vIG9rbGFiIEEgQiAtPiAtMC40Li4wLjRcblx0XHRcdFx0aWYgKHNwYWNlID09PSAnb2tsYWInKSByZXR1cm4geCAqIDAuNFxuXHRcdFx0XHQvLyBva2xjaCBDIC0+IDAuLjAuNCwgSCAtPiAwLi4zNjBcblx0XHRcdFx0aWYgKHNwYWNlID09PSAnb2tsY2gnKSByZXR1cm4gaSA8IDIgPyB4ICogMC40IDogeCAqIDM2MFxuXHRcdFx0XHQvLyBjb2xvcih4eHgpIC0+IDAuLjFcblx0XHRcdFx0cmV0dXJuIHhcblx0XHRcdH1cblxuXHRcdFx0Ly9odWVcblx0XHRcdGlmIChzcGFjZVtpXSA9PT0gJ2gnIHx8IChpID09PSAyICYmIHNwYWNlW3NwYWNlLmxlbmd0aCAtIDFdID09PSAnaCcpKSB7XG5cdFx0XHRcdC8vPGJhc2UtaHVlPlxuXHRcdFx0XHRpZiAoYmFzZUh1ZXNbeF0gIT09IHVuZGVmaW5lZCkgcmV0dXJuIGJhc2VIdWVzW3hdXG5cdFx0XHRcdC8vPGRlZz5cblx0XHRcdFx0aWYgKHguZW5kc1dpdGgoJ2RlZycpKSByZXR1cm4gcGFyc2VGbG9hdCh4KVxuXHRcdFx0XHQvLzx0dXJuPlxuXHRcdFx0XHRpZiAoeC5lbmRzV2l0aCgndHVybicpKSByZXR1cm4gcGFyc2VGbG9hdCh4KSAqIDM2MFxuXHRcdFx0XHRpZiAoeC5lbmRzV2l0aCgnZ3JhZCcpKSByZXR1cm4gcGFyc2VGbG9hdCh4KSAqIDM2MCAvIDQwMFxuXHRcdFx0XHRpZiAoeC5lbmRzV2l0aCgncmFkJykpIHJldHVybiBwYXJzZUZsb2F0KHgpICogMTgwIC8gTWF0aC5QSVxuXHRcdFx0fVxuXHRcdFx0aWYgKHggPT09ICdub25lJykgcmV0dXJuIDBcblx0XHRcdHJldHVybiBwYXJzZUZsb2F0KHgpXG5cdFx0fSk7XG5cblx0XHRhbHBoYSA9IHBhcnRzLmxlbmd0aCA+IGRpbXMgPyBwYXJ0cy5wb3AoKSA6IDFcblx0fVxuXG5cdC8vbmFtZWQgY2hhbm5lbHMgY2FzZVxuXHRlbHNlIGlmICgvWzAtOV0oPzpcXHN8XFwvfCwpLy50ZXN0KGNzdHIpKSB7XG5cdFx0cGFydHMgPSBjc3RyLm1hdGNoKC8oWzAtOV0rKS9nKS5tYXAoZnVuY3Rpb24gKHZhbHVlKSB7XG5cdFx0XHRyZXR1cm4gcGFyc2VGbG9hdCh2YWx1ZSlcblx0XHR9KVxuXG5cdFx0c3BhY2UgPSBjc3RyLm1hdGNoKC8oW2Etel0pL2lnKT8uam9pbignJyk/LnRvTG93ZXJDYXNlKCkgfHwgJ3JnYidcblx0fVxuXG5cdHJldHVybiB7XG5cdFx0c3BhY2UsXG5cdFx0dmFsdWVzOiBwYXJ0cyxcblx0XHRhbHBoYVxuXHR9XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/color-parse@2.0.2/node_modules/color-parse/index.js\n");

/***/ })

};
;