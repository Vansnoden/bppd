"""db new all in one table

Revision ID: 1e160310b0fe
Revises: 6f2da4b097c0
Create Date: 2025-01-31 21:05:01.879683

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import geoalchemy2


# revision identifiers, used by Alembic.
revision: str = '1e160310b0fe'
down_revision: Union[str, None] = '6f2da4b097c0'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('bee_plant_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('location_name', sa.String(), nullable=True),
    sa.Column('plant_species_name', sa.String(), nullable=True),
    sa.Column('family_name', sa.String(), nullable=True),
    sa.Column('date', sa.String(), nullable=True),
    sa.Column('year', sa.Integer(), nullable=True),
    sa.Column('month', sa.Integer(), nullable=True),
    sa.Column('lat', sa.Float(), nullable=True),
    sa.Column('lon', sa.Float(), nullable=True),
    sa.Column('geom', geoalchemy2.types.Geometry(geometry_type='POINT', from_text='ST_GeomFromEWKT', name='geometry'), nullable=True),
    sa.Column('is_native', sa.Boolean(), nullable=True),
    sa.Column('country', sa.String(), nullable=True),
    sa.Column('region', sa.String(), nullable=True),
    sa.Column('continent', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('plant_species', sa.Column('species_name_note', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_column('plant_species', 'specie_name_note')
    op.add_column('observations', sa.Column('species_class', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('observations', sa.Column('plant_species_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'observations', type_='foreignkey')
    op.create_foreign_key('observations_plant_species_id_fkey', 'observations', 'plant_species', ['plant_species_id'], ['id'])
    op.drop_column('observations', 'specie_class')
    op.drop_column('observations', 'plant_specie_id')
    op.create_table('top_x_plants',
    sa.Column('count', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('plant_specie_id', sa.INTEGER(), autoincrement=False, nullable=True)
    )
    op.drop_table('bee_plant_data')
    # ### end Alembic commands ###
